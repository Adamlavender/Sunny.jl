@testitem "Structure factors" begin

    function simple_model_sf(; mode, seed=111)
        latsize = (4,4,4)
        J = 1.0
        cryst = Sunny.fcc_primitive_crystal()
        S = mode==:SUN ? 1/2 : 1
        κ = mode==:SUN ? 2 : 1
        sys = System(cryst, latsize, [SiteInfo(1; S)]; mode, seed)
        sys.κs .= κ
        set_exchange!(sys, J, Bond(1, 1, [1, 0, 0]))
        return sys
    end

    function thermalize_simple_model!(sys; kT)
        Δt = 0.05  # Time step for thermalization
        λ  = 0.1
        nsteps = 1000  # Number of steps between MC samples
        integrator = LangevinHeunP(kT, λ, Δt)
        for _ in 1:nsteps
            step!(sys, integrator)
        end
    end
    

    # Test sum rule with custom observables 
    sys = simple_model_sf(; mode=:SUN)
    S = Sunny.spin_matrices(2)
    ops = cat(S...; dims=3)
    sf = StructureFactor(sys; nω=100, ωmax=10.0, apply_g=false, ops)
    thermalize_simple_model!(sys; kT=0.1)
    add_trajectory!(sf, sys)
    intensities = intensity_grid(sf, :trace; negative_energies=true)
    total_intensity_trace = sum(intensities)
    @test isapprox(total_intensity_trace / prod(sys.latsize), 1.0; atol=1e-12)


    # Test sum rule with default observables in dipole mode 
    sys = simple_model_sf(; mode=:dipole)
    sf = StructureFactor(sys; nω=100, ωmax=10.0, apply_g=false)
    thermalize_simple_model!(sys; kT=0.1)
    add_trajectory!(sf, sys)
    intensities = intensity_grid(sf, :trace; negative_energies=true)
    total_intensity_trace = sum(intensities)
    @test isapprox(total_intensity_trace / prod(sys.latsize), 1.0; atol=1e-12)


    # Test perp reduces intensity
    intensities = intensity_grid(sf, :perp; negative_energies=true)
    total_intensity_unpolarized = sum(intensities)
    @test total_intensity_unpolarized < total_intensity_trace


    # Test diagonal elements are approximately real (at one wave vector)
    for α in 1:3
        intensities_symmetric = get_intensities(sf, [(0.25, 0.5, 0)], (α,α))
        @test sum(imag(intensities_symmetric)) < 1e-15
    end


    # Test form factor correction works and is doing something. ddtodo: add example with sublattice
    formfactors = [FormFactor(1, "Fe2")]
    intensities = intensity_grid(sf, :trace; formfactors, negative_energies=true)
    total_intensity_ff = sum(intensities)
    @test total_intensity_ff != total_intensity_trace


    # Test path function and interpolation working (no correctness implied here)
    qs = connected_path([(0, 0, 0), (0, 1, 0), (1, 1, 0)], 20)
    intensities = get_intensities(sf, qs, :trace; interpolation=:linear)
    @test length(size(intensities)) == 2 


    # Test static intensities working
    qs = Sunny.qgrid(sf) 
    static_intensities = get_static_intensities(sf, qs, :trace; negative_energies=true)
    total_intensity_static = sum(static_intensities)
    @test isapprox(total_intensity_static, total_intensity_trace; atol=1e-12)  # Order of summation can lead to very small discrepancies
end


@testitem "Structure factor reference" begin
    using DelimitedFiles

    function diamond_model(; J, dims = (3,3,3), kwargs...)
        crystal = Sunny.diamond_crystal()
        S = 3/2
        sys = System(crystal, dims, [SiteInfo(1; S)]; mode=:dipole, kwargs...)
        set_exchange!(sys, J, Bond(1, 3, [0,0,0]))
        randomize_spins!(sys)
        return sys
    end

    seed = 101
    J = Sunny.meV_per_K * 7.5413 
    sys = diamond_model(; J, seed)

    Δt_therm = 0.07 
    kT = Sunny.meV_per_K * 2. # Units of meV
    λ  = 0.1
    integrator = LangevinHeunP(kT, λ, Δt_therm)

    # Thermalize
    for _ in 1:3000
        step!(sys, integrator)
    end

    # Calculate a path
    sampler = LangevinSampler(integrator, 1000)
    sf = calculate_structure_factor(sys, sampler; nω=25, ωmax=5.5, nsamples=1)
    qs = connected_path([(0.0, 0.0, 0.0), (0.5, 0.0, 0.0), (0.5, 0.5, 0.0), (0.0, 0.0, 0.0)], 10)
    intensities = get_intensities(sf, qs, :trace; interpolation=:linear, kT)

    refdata = [4.25495822364784 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0; 2.9862179193458105 0.009323187236000688 0.007391289086640663 0.011120846762920024 0.005003798264126966 0.012301697109643074 0.02066639946730014 0.09787555896372627 1.280339925399154 1.3265303861820101 0.05391198417359767 0.02022430663789001 0.015086215921821574 0.014036216400385552 0.009233292700508194 0.008069929291799541 0.010015991700763126 0.007777857171109878 0.006855307804970187 0.017260012081502848 0.0061097379469070776 0.011155112369142654 0.00423989297625334 0.013201503487882339 0.007089436908835075; 1.7174776150437805 0.01864637447194359 0.014782578173273078 0.02224169352583689 0.010007596528251858 0.024603394219285042 0.041332798934603496 0.19575111792745403 2.5606798507983073 2.65306077236402 0.10782396834719843 0.04044861327577939 0.030172431843644418 0.028072432800770656 0.01846658540101629 0.016139858583597327 0.02003198340152817 0.01555571434222007 0.01371061560993917 0.03452002416300613 0.01221947589381411 0.022310224738286567 0.008479785952507845 0.026403006975766745 0.014178873817670815; 0.4487373107417514 0.02796956170788649 0.02217386725990549 0.033362540288753746 0.015011394792376745 0.036905091328927005 0.06199919840190684 0.2936266768911817 3.84101977619746 3.979591158546029 0.16173595252079917 0.060672919913668744 0.04525864776546726 0.04210864920115575 0.027699878101524387 0.024209787875395114 0.030047975102293217 0.023333571513330258 0.020565923414908153 0.051780036244509414 0.01832921384072114 0.03346533710743048 0.01271967892876235 0.03960451046365114 0.02126831072650655; 0.02148131598521978 0.02526943969287388 0.020093244134433454 0.03157129671042748 0.017690927095534294 0.03652535884381305 0.06401419506169975 0.2667225491962043 3.419158294195253 3.5396844602327198 0.15267264314403572 0.06510633280293057 0.06273816039505932 0.10308766641269557 3.4792882164512915 0.4604421503818639 0.055676902683699 0.0314964573256529 0.041736643608538605 0.05533644658458856 0.01950657869937396 0.036636884906910916 0.01617823428204554 0.03853369725284077 0.028220612527441652; 0.014967476001437004 0.016557663052383535 0.013276664902909203 0.023324007961479657 0.019208326418208174 0.029804911561321135 0.056703490317737484 0.17742857817187438 2.1461961084923673 2.2165592196717534 0.11212168699209027 0.06164429881787864 0.08141432137853599 0.18753808402981273 8.652054077625685 1.1107557294956678 0.08911229820542516 0.03985185745858176 0.07006506999649978 0.05204105605395566 0.018217757013899678 0.035816650421559626 0.019246120823843072 0.03032672569268302 0.035104346774426434; 0.011673387981485527 0.018190982418771155 0.016770522979077766 0.019745248603248475 0.017458572356589368 0.02614864803193348 0.043640057131754374 0.13019065533564955 1.5084440454550205 1.564119331981974 0.12564603956860187 0.42866143679546376 0.1250398092590548 0.20848240952231745 7.2635154056562685 3.488993048104838 0.2739087816923633 0.11206967049467881 0.08290899589914982 0.060974640206307704 0.031908020178110674 0.04008837287842508 0.022615255504466768 0.038168612700433466 0.05026726958082997; 0.008379299961534048 0.019824301785158774 0.02026438105524633 0.016166489245017297 0.015708818294970565 0.02249238450254582 0.030576623945771257 0.08295273249942471 0.8706919824176738 0.9116794442921945 0.13917039214511345 0.7956785747730488 0.16866529713957362 0.22942673501482222 5.874976733686852 5.867230366714008 0.45870526517930155 0.18428748353077587 0.09575292180179987 0.06990822435865975 0.045598283342321674 0.04436009533529053 0.02598439018509046 0.04601049970818392 0.06543019238723351; 0.005085211941582572 0.021457621151546397 0.023758239131414897 0.012587729886786119 0.013959064233351762 0.018836120973158166 0.01751319075978815 0.0357148096631999 0.2329399193803273 0.2592395566024153 0.15269474472162506 1.1626957127506337 0.2122907850200924 0.25037106050732694 4.486438061717437 8.245467685323176 0.6435017486662397 0.2565052965668729 0.10859684770444988 0.07884180851101179 0.05928854650653267 0.04863181779215598 0.029353524865714152 0.053852386715934356 0.08059311519363704; 0.004908861180911183 0.020730327575764797 0.023620636765011763 0.024449449660076773 0.021192291915895823 0.02346458100574192 0.016867924286007908 0.027618648211462954 0.021443370141941222 0.04370594163449957 0.13469458173287 1.0453324307954053 0.21259357667334627 0.26258418349984536 3.5108440513362518 8.761091667941447 3.3813064072395553 0.7422036373092672 0.17720996665813527 0.10560536436690585 0.09372889533534084 0.05892230970841551 0.04152700320863034 0.06969707299489994 0.0987653916076728; 0.006291379049879838 0.01882272752889859 0.021667304177322787 0.04403140899912833 0.03291701047052131 0.03223540281931138 0.0224317411683291 0.03909336745196995 0.023074577803035356 0.04662546302751554 0.10093216096148164 0.6857789388737704 0.1912350202129677 0.27043170524237053 2.741722371749183 8.345408982564267 7.395615153356058 1.4346422419048097 0.2737076821373383 0.14128390607457092 0.13854428699644758 0.07222218635437208 0.058102653382692784 0.08954315890947309 0.11844234482552463; 0.004416781026842389 0.01890119976518068 0.019408467383745152 0.021456658510055272 0.0173397484807429 0.018999428464036183 0.017635285119993738 0.02729808148953784 0.018902904640389524 0.03767137832882536 0.1586736905203449 1.298310741897113 0.22793440101553658 0.19811817936884915 2.141334700835274 5.375190165511983 2.699563457065057 0.571779528706325 0.14618017093279773 0.08129375634806735 0.08056213722303449 0.0432123480405623 0.04288051472590154 0.052836198864733466 0.0841529761168109; 0.0032607683879769013 0.020573284248319425 0.017079475633832737 0.009992792060060315 0.006312213450528933 0.008727575372978016 0.015155824643026373 0.020829067714551584 0.01344578145286958 0.032103412050069356 0.24147195967690285 2.1327136079213025 0.2920485374481146 0.07548213902949903 0.6954113175114691 1.5080411891777856 0.3049170326220805 0.0892836027491269 0.046160714267462516 0.03361545541805539 0.030700657147839143 0.0171184235958843 0.024304271179728727 0.017846071344922942 0.05936399076393711; 0.0941893319631399 0.023064658355422884 0.016823649574629188 0.01197209687490329 0.007255225036711607 0.012726543707396221 0.023699482753828858 0.09282557099618972 0.9036922624435115 0.770959238648918 0.24082569805384105 1.8211141804688882 0.24526918726857544 0.027132199160076073 0.024734091465483284 0.02129805178500516 0.020146719060778924 0.014613801649229416 0.01915314203299522 0.023232283355368463 0.01688195154313997 0.01341481311598401 0.01707782328826834 0.014128743499124536 0.04341710365466605; 0.5535852622197792 0.022528766254494022 0.01583848628720677 0.014115685504510284 0.010086393027772225 0.018112891421504258 0.030122455359956897 0.1549007549949023 1.683486945996207 1.4156558174894827 0.18671719201982434 1.0422991031613815 0.15177878781528065 0.028288648284165913 0.02174853405363729 0.02096276262899391 0.02029746638547652 0.014886782947327815 0.017654551937983883 0.023832542695018055 0.01633621483966583 0.016408217438842583 0.015274329358330499 0.020161616425708347 0.03009531283158887; 1.4001787209194425 0.01850602582829022 0.012706156928962473 0.012834865568562594 0.009820911518674175 0.017787250041641084 0.0283135324363609 0.16012155449510795 1.7928031301065204 1.5020614706615179 0.12854340699951133 0.4791750473140643 0.07973712345275284 0.024152098132183254 0.01663099967210809 0.01730132427948959 0.016989928983578907 0.01254214310515566 0.013962831567481095 0.020160581915673104 0.013340644014651133 0.015170216693797898 0.011826860833639635 0.019817783484715183 0.01841853194811868; 2.6339697080621285 0.010996437076811477 0.007426661499896301 0.00812963706706022 0.00645878050941746 0.011749619567806704 0.018272713983040867 0.10848796949680672 1.231640814774452 1.0301761981650244 0.06630434299290223 0.13174201292693752 0.029144194180992247 0.014722548704128108 0.009381488320895697 0.010313736736492208 0.010224106855086101 0.007579882122712952 0.008077980921486873 0.012216401017333609 0.007895239068095875 0.009700810880849954 0.006735417714195748 0.01309724467614505 0.008386761004255509; 4.25495822364784 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]

    # Compare with reference 
    @test isapprox(intensities, refdata; atol=1e-12)
end
