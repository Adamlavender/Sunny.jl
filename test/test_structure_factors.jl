@testitem "Structure factors" begin

    function simple_model_sf(; mode, seed=111)
        latsize = (4,4,4)
        J = 1.0
        cryst = Sunny.fcc_primitive_crystal()
        S = mode==:SUN ? 1/2 : 1
        κ = mode==:SUN ? 2 : 1
        sys = System(cryst, latsize, [SpinInfo(1; S)], mode; seed)
        sys.κs .= κ
        set_exchange!(sys, J, Bond(1, 1, [1, 0, 0]))
        return sys
    end

    function thermalize_simple_model!(sys; kT)
        Δt = 0.05  # Time step for thermalization
        λ  = 0.1
        nsteps = 1000  # Number of steps between MC samples
        langevin = Langevin(Δt, kT, λ)
        for _ in 1:nsteps
            step!(sys, langevin)
        end
    end
    

    # Test sum rule with custom observables 
    sys = simple_model_sf(; mode=:SUN)
    thermalize_simple_model!(sys; kT=0.1)
    S = Sunny.spin_matrices(2)
    ops = cat(S...; dims=3)
    sf = DynamicStructureFactor(sys; nω=100, ωmax=10.0, Δt=0.1, apply_g=false, ops)
    qgrid = all_exact_wave_vectors(sf)
    vals = intensities(sf, qgrid, :trace; negative_energies=true)
    total_intensity_trace = sum(vals)
    @test isapprox(total_intensity_trace / prod(sys.latsize), 1.0; atol=1e-12)


    # Test sum rule with default observables in dipole mode 
    sys = simple_model_sf(; mode=:dipole)
    thermalize_simple_model!(sys; kT=0.1)
    sf = DynamicStructureFactor(sys; Δt=0.1, nω=100, ωmax=10.0, apply_g=false)
    add_sample!(sf, sys)
    vals = intensities(sf, qgrid, :trace; negative_energies=true)
    total_intensity_trace = sum(vals)
    @test isapprox(total_intensity_trace / prod(sys.latsize), 1.0; atol=1e-12)


    # Test perp reduces intensity
    vals = intensities(sf, qgrid, :perp; negative_energies=true)
    total_intensity_unpolarized = sum(vals)
    @test total_intensity_unpolarized < total_intensity_trace


    # Test diagonal elements are approximately real (at one wave vector)
    for α in 1:3
        intensities_symmetric = intensities(sf, [(0.25, 0.5, 0)], (α,α))
        @test sum(imag(intensities_symmetric)) < 1e-15
    end


    # Test form factor correction works and is doing something. ddtodo: add example with sublattice
    formfactors = [FormFactor(1, "Fe2")]
    vals = intensities(sf, qgrid, :trace; formfactors, negative_energies=true)
    total_intensity_ff = sum(vals)
    @test total_intensity_ff != total_intensity_trace


    # Test path function and interpolation working (no correctness implied here)
    qs, _ = connected_path([(0, 0, 0), (0, 1, 0), (1, 1, 0)], 20)
    vals = intensities(sf, qs, :trace; interpolation=:linear)
    @test length(size(vals)) == 2 


    # Test static from dynamic intensities working
    static_vals = static_intensities(sf, qgrid, :trace; negative_energies=true)
    total_intensity_static = sum(static_vals)
    @test isapprox(total_intensity_static, total_intensity_trace; atol=1e-12)  # Order of summation can lead to very small discrepancies

    # Test StaticStructureFactor working
    sys = simple_model_sf(; mode=:dipole)
    thermalize_simple_model!(sys; kT=0.1)
    sf = StaticStructureFactor(sys; apply_g=false)
    true_static_vals = static_intensities(sf, qgrid, :trace)
    true_static_total = sum(true_static_vals)
    @test isapprox(true_static_total / prod(sys.latsize), 1.0; atol=1e-12)

end


@testitem "Structure factor reference" begin

    function diamond_model(; J, dims = (3,3,3), kwargs...)
        crystal = Sunny.diamond_crystal()
        S = 3/2
        sys = System(crystal, dims, [SpinInfo(1; S)], :dipole; kwargs...)
        set_exchange!(sys, J, Bond(1, 3, [0,0,0]))
        randomize_spins!(sys)
        return sys
    end

    seed = 101
    J = Sunny.meV_per_K * 7.5413 
    sys = diamond_model(; J, seed)

    Δt_langevin = 0.07 
    kT = Sunny.meV_per_K * 2. # Units of meV
    λ  = 0.1
    langevin = Langevin(Δt_langevin, kT, λ)

    # Thermalize
    for _ in 1:4000
        step!(sys, langevin)
    end

    sf = DynamicStructureFactor(sys; nω=25, ωmax=5.5, Δt=2Δt_langevin)
    qs, _ = connected_path([(0.0, 0.0, 0.0), (0.5, 0.0, 0.0), (0.5, 0.5, 0.0), (0.0, 0.0, 0.0)], 10)
    data = intensities(sf, qs, :trace; interpolation=:linear, kT)

    refdata =  [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0; 0.0 0.009323187235955734 0.0073912890866411115 0.01112084676291907 0.005003798264127386 0.012301697109641206 0.020666399467302657 0.09787555896372725 1.2803399253991592 1.3265303861820092 0.0539119841736018 0.02022430663789014 0.015086215921821666 0.014036216400385831 0.009233292700508286 0.008069929291799087 0.010015991700766006 0.0077778571711091555 0.006855307804969133 0.017260012081503243 0.006109737946907559 0.011155112369144063 0.0042398929762552705 0.013201503487883747 0.0070894369088354905; 0.0 0.01864637447191789 0.01478257817327334 0.022241693525836336 0.010007596528252104 0.02460339421928398 0.041332798934604925 0.19575111792745456 2.5606798507983113 2.653060772364019 0.10782396834720075 0.04044861327577944 0.030172431843644494 0.028072432800770764 0.01846658540101628 0.01613985858359684 0.020031983401529875 0.015555714342219721 0.013710615609938515 0.034520024163006355 0.01221947589381438 0.02231022473828735 0.008479785952508968 0.026403006975767494 0.014178873817671037; 0.0 0.02796956170788004 0.022173867259905566 0.0333625402887536 0.01501139479237682 0.03690509132892675 0.061999198401907187 0.2936266768911819 3.841019776197463 3.979591158546029 0.16173595252079967 0.060672919913668744 0.04525864776546732 0.042108649201155694 0.027699878101524272 0.024209787875394597 0.03004797510229374 0.023333571513330282 0.020565923414907896 0.05178003624450945 0.018329213840721198 0.03346533710743063 0.012719678928762666 0.03960451046365124 0.02126831072650658; 0.0 0.025269439692873857 0.020093244134433464 0.031571296710427466 0.017690927095534312 0.03652535884381305 0.06401419506169974 0.26672254919620425 3.419158294195255 3.5396844602327198 0.15267264314403564 0.06510633280293056 0.06273816039505936 0.1030876664126954 3.4792882164512915 0.46044215038186354 0.0556769026836991 0.03149645732565294 0.04173664360853851 0.05533644658458857 0.019506578699373948 0.036636884906910874 0.016178234282045574 0.03853369725284068 0.02822061252744163; 0.0 0.016557663052383518 0.01327666490290921 0.023324007961479643 0.019208326418208188 0.029804911561321132 0.056703490317737436 0.17742857817187435 2.146196108492369 2.216559219671753 0.11212168699209019 0.06164429881787865 0.08141432137853599 0.18753808402981245 8.652054077625685 1.1107557294956676 0.08911229820542518 0.03985185745858165 0.07006506999649972 0.0520410560539557 0.018217757013899667 0.035816650421559605 0.01924612082384309 0.03032672569268298 0.03510434677442643; 0.0 0.018190982418771144 0.016770522979077773 0.01974524860324847 0.01745857235658938 0.02614864803193348 0.04364005713175434 0.13019065533564952 1.5084440454550219 1.5641193319819735 0.1256460395686021 0.4286614367954642 0.1250398092590549 0.20848240952231725 7.2635154056562685 3.4889930481048377 0.2739087816923633 0.11206967049467877 0.0829089958991498 0.06097464020630774 0.03190802017811069 0.040088372878425066 0.02261525550446676 0.03816861270043345 0.05026726958082996; 0.0 0.019824301785158774 0.02026438105524634 0.01616648924501729 0.01570881829497057 0.022492384502545825 0.030576623945771236 0.0829527324994247 0.8706919824176745 0.9116794442921944 0.139170392145114 0.7956785747730497 0.1686652971395738 0.22942673501482208 5.874976733686852 5.867230366714008 0.4587052651793015 0.18428748353077587 0.09575292180179985 0.06990822435865979 0.04559828334232171 0.04436009533529052 0.025984390185090436 0.046010499708183925 0.06543019238723348; 0.0 0.021457621151546397 0.0237582391314149 0.012587729886786119 0.013959064233351762 0.018836120973158173 0.017513190759788144 0.03571480966319989 0.2329399193803275 0.2592395566024153 0.15269474472162592 1.162695712750635 0.21229078502009266 0.2503710605073269 4.486438061717436 8.245467685323176 0.6435017486662395 0.256505296566873 0.10859684770444993 0.07884180851101182 0.05928854650653273 0.04863181779215597 0.029353524865714103 0.05385238671593439 0.08059311519363699; 0.0 0.020730327575764797 0.02362063676501177 0.024449449660076776 0.021192291915895826 0.02346458100574193 0.01686792428600791 0.027618648211462957 0.02144337014194123 0.04370594163449961 0.13469458173287052 1.0453324307954066 0.21259357667334638 0.26258418349984525 3.5108440513362513 8.761091667941447 3.381306407239555 0.7422036373092673 0.1772099666581353 0.1056053643669059 0.09372889533534087 0.0589223097084155 0.041527003208630314 0.06969707299489997 0.09876539160767273; 0.0 0.018822727528898596 0.02166730417732279 0.04403140899912833 0.03291701047052131 0.032235402819311386 0.022431741168329106 0.03909336745196996 0.023074577803035366 0.046625463027515544 0.10093216096148151 0.6857789388737714 0.1912350202129675 0.2704317052423705 2.7417223717491828 8.345408982564267 7.395615153356057 1.4346422419048097 0.27370768213733826 0.14128390607457098 0.13854428699644758 0.07222218635437205 0.058102653382692784 0.08954315890947309 0.11844234482552457; 0.0 0.018901199765180683 0.019408467383745152 0.021456658510055272 0.017339748480742902 0.01899942846403619 0.01763528511999374 0.027298081489537836 0.018902904640389528 0.03767137832882536 0.1586736905203449 1.2983107418971138 0.22793440101553653 0.1981181793688491 2.141334700835274 5.375190165511983 2.699563457065056 0.5717795287063251 0.14618017093279778 0.08129375634806738 0.08056213722303451 0.04321234804056229 0.042880514725901514 0.05283619886473348 0.08415297611681086; 0.0 0.02057328424831943 0.01707947563383273 0.00999279206006031 0.006312213450528939 0.00872757537297802 0.01515582464302637 0.020829067714551584 0.013445781452869595 0.032103412050069356 0.2414719596769029 2.132713607921303 0.2920485374481147 0.07548213902949905 0.6954113175114687 1.5080411891777856 0.30491703262207975 0.08928360274912694 0.0461607142674626 0.033615455418055384 0.030700657147839146 0.017118423595884308 0.024304271179728682 0.017846071344922953 0.05936399076393711; 0.0 0.023064658355421583 0.016823649574629194 0.011972096874903257 0.007255225036711626 0.012726543707396171 0.02369948275382893 0.09282557099618975 0.9036922624435122 0.7709592386489179 0.24082569805384124 1.8211141804688886 0.2452691872685756 0.027132199160076156 0.024734091465483096 0.021298051785005136 0.020146719060778293 0.014613801649229402 0.01915314203299523 0.023232283355368456 0.01688195154313999 0.013414813115984057 0.01707782328826836 0.01412874349912457 0.04341710365466608; 0.0 0.022528766254485837 0.015838486287206854 0.014115685504510107 0.010086393027772306 0.01811289142150392 0.030122455359957355 0.15490075499490244 1.6834869459962087 1.4156558174894822 0.18671719201982506 1.0422991031613817 0.15177878781528073 0.028288648284166065 0.021748534053637324 0.020962762628993586 0.020297466385476373 0.014886782947327672 0.017654551937983706 0.023832542695018114 0.016336214839665943 0.01640821743884284 0.01527432935833084 0.02016161642570858 0.03009531283158895; 0.0 0.01850602582826925 0.01270615692896268 0.012834865568562146 0.009820911518674372 0.017787250041640213 0.02831353243636207 0.1601215544951084 1.7928031301065235 1.5020614706615172 0.12854340699951328 0.47917504731406446 0.07973712345275294 0.02415209813218349 0.016630999672108265 0.0173013242794891 0.016989928983579705 0.012542143105155293 0.013962831567480613 0.020160581915673277 0.01334064401465138 0.01517021669379855 0.011826860833640531 0.019817783484715825 0.018418531948118884; 0.0 0.010996437076771837 0.007426661499896695 0.008129637067059383 0.006458780509417828 0.011749619567805052 0.018272713983043087 0.10848796949680757 1.2316408147744564 1.0301761981650233 0.0663043429929059 0.13174201292693768 0.02914419418099233 0.014722548704128438 0.009381488320895923 0.010313736736491686 0.010224106855088299 0.007579882122712268 0.008077980921485966 0.012216401017333954 0.007895239068096315 0.0097008108808512 0.006735417714197445 0.013097244676146303 0.008386761004255885; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]

    # Compare with reference 
    @test isapprox(data, refdata; atol=1e-12)
end
